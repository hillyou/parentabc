<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.parentabc.dao.QuestionDao">
    <!--    <cache type="org.mybatis.caches.ehcache.EhcacheCache">-->
    <!--        <property name="timeToIdleSeconds" value="3600"/>
    <property name="timeToLiveSeconds" value="3600"/>
    <property name="maxEntriesLocalHeap" value="1000"/>
    <property name="maxEntriesLocalDisk" value="10000000"/>
    <property name="memoryStoreEvictionPolicy" value="LRU"/>-->
    <!--</cache>-->

    <resultMap type="Question" id="question">
        <id column="Q_ID" property="id" />
        <result column="Q_QTITLE" property="qtitle" />
        <result column="Q_QCONTENT" property="qcontent" />
        <result column="Q_CREATE_DATE" property="createDate" />
        <result column="Q_CREATOR_ID" property="creatorId" />
        <result column="Q_UPDATE_DATE" property="updateDate" />
        <result column="Q_POINTS" property="points" />
        <result column="Q_TYPE" property="type" />
        <result column="Q_STATUS" property="status" />
        <result column="Q_VERSION" property="version" />
        <result column="Q_VIEWS" property="views" />
        <result column="Q_ANSWERSSIZE" property="answersSize" />
        <association property="answers" resultMap="answer"></association>
        <association property="memberUser" resultMap="user"></association>
    </resultMap>

    <resultMap type="Answer" id="answer">
        <id column="A_ID" property="id" />
        <result column="Q_ID" property="QId" />
        <result column="A_ACONTENT" property="acontent" />
        <result column="A_CREATE_DATE" property="createDate" />
        <result column="A_CREATOR_ID" property="creatorId" />
        <result column="A_UPDATE_DATE" property="updateDate" />
        <result column="A_BEST" property="best" />
        <result column="A_POINTS" property="points" />
        <result column="A_TYPE" property="type" />
        <result column="A_STATUS" property="status" />
        <result column="A_VERSION" property="version" />
        <association property="memberUser" resultMap="user"></association>
    </resultMap>

    <resultMap type="MemberUser" id="user">
        <id column="U_ID" property="id" />
        <result column="U_USERNAME" property="username" />
        <result column="U_CREATE_DATE" property="createDate" />
        <result column="U_UPDATE_DATE" property="updateDate" />
        <result column="U_POINTS" property="points" />
        <result column="U_PASSWD" property="passwd" />
        <result column="U_MOBILE" property="mobile" />
        <result column="U_ADDRESS" property="address" />
        <result column="U_STATUS" property="status" />
        <result column="U_VERSION" property="version" />
        <result column="U_EMAIL" property="email" />
        <result column="U_UNIONID" property="unionid" />
        <result column="U_OPENID" property="openid" />
        <result column="U_SEX" property="sex" />
        <result column="U_LANGUAGE" property="lang" />
        <result column="U_CITY" property="city" />
        <result column="U_PROVINCE" property="province" />
        <result column="U_COUNTRY" property="country" />
        <result column="U_NICKNAME" property="nickname" />
        <result column="U_HEADIMGURL" property="headimgurl" />
        <result column="U_SUBSCRIBE" property="subscribe" />
    </resultMap>



    <select id="getQuestions" parameterType="com.parentabc.dto.BasePageQueryReq" useCache="true" resultMap="question">
        select
        q.ID Q_ID,
        q.QTITLE Q_QTITLE,
        q.QCONTENT Q_QCONTENT,
        q.CREATE_DATE Q_CREATE_DATE,
        q.CREATORID Q_CREATOR_ID,
        q.UPDATE_DATE Q_UPDATE_DATE,
        q.POINTS Q_POINTS,
        q.TYPE Q_TYPE,
        q.STATUS Q_STATUS,
        q.VERSION Q_VERSION,
        q.NICKNAME Q_NICKNAME,
        q.AGE Q_AGE,
        q.SEX Q_SEX,
        v.COUNTS Q_VIEWS,
        av.COUNTS Q_ANSWERSSIZE,

        u.ID U_ID,
        u.USERNAME U_USERNAME,
        u.CREATE_DATE U_CREATE_DATE,
        u.UPDATE_DATE U_UPDATE_DATE,
        u.POINTS U_POINTS,
        u.PASSWD U_PASSWD,
        u.MOBILE U_MOBILE,
        u.ADDRESS U_ADDRESS,
        u.STATUS U_STATUS,
        u.VERSION U_VERSION,
        u.EMAIL U_EMAIL,
        u.UNIONID U_UNIONID,
        u.OPENID U_OPENID,
        u.SEX U_SEX,
        u.LANG U_LANGUAGE,
        u.CITY U_CITY,
        u.PROVINCE U_PROVINCE,
        u.COUNTRY U_COUNTRY,
        u.NICKNAME U_NICKNAME,
        u.HEADIMGURL U_HEADIMGURL,
        u.SUBSCRIBE U_SUBSCRIBE

        from QUESTIONS q
        left join MEMBERUSER u
        on q.CREATORID=u.id
        left join VIEWS_COUNT_VIEW v
        on q.id=v.ques_id
        left join ANSWERS_COUNT_VIEW av
        on q.id=av.ques_id
        <where>
            1=1
            <if test="statusList!=null and statusList.size>0">
                and q.STATUS in
                <foreach collection="statusList" item="status" open="(" close=")" separator="">
                    #{status}
                </foreach>
            </if>
            <if test="type &gt; 0">
                and q.TYPE = #{type}
            </if>
            <if test="beginDate!=null">
                and q.CREATE_DATE &gt;= #{beginDate}
            </if>
            <if test="endDate!=null">
                and q.CREATE_DATE &lt; #{endDate}
            </if>
            <if test="updateBegin!=null">
                and q.UPDATE_DATE &gt;= #{updateBegin}
            </if>
            <if test="updateEnd!=null">
                and q.UPDATE_DATE &lt; #{updateEnd}
            </if>
            <if test="byName!=null and byName!=''">
                and
                (
                q.NICKNAME like "%"#{byName}"%"
                or
                u.NICKNAME like "%"#{byName}"%"
                )
            </if>
            <if test="byContent!=null and byContent!=''">
                and
                (
                q.QTITLE like "%"#{byContent}"%"
                or
                q.QCONTENT like "%"#{byContent}"%"
                )
            </if>
            and q.STATUS != 9
        </where>
        order by q.CREATE_DATE DESC
    </select>


    <select id="getUnansweredQues" parameterType="com.parentabc.dto.BasePageQueryReq" useCache="true" resultMap="question">
        select
        q.ID Q_ID,
        q.QTITLE Q_QTITLE,
        q.QCONTENT Q_QCONTENT,
        q.CREATE_DATE Q_CREATE_DATE,
        q.CREATORID Q_CREATOR_ID,
        q.UPDATE_DATE Q_UPDATE_DATE,
        q.POINTS Q_POINTS,
        q.TYPE Q_TYPE,
        q.STATUS Q_STATUS,
        q.VERSION Q_VERSION,
        v.COUNTS Q_VIEWS,
        av.COUNTS Q_ANSWERSSIZE,

        u.ID U_ID,
        u.USERNAME U_USERNAME,
        u.CREATE_DATE U_CREATE_DATE,
        u.UPDATE_DATE U_UPDATE_DATE,
        u.POINTS U_POINTS,
        u.PASSWD U_PASSWD,
        u.MOBILE U_MOBILE,
        u.ADDRESS U_ADDRESS,
        u.STATUS U_STATUS,
        u.VERSION U_VERSION,
        u.EMAIL U_EMAIL,
        u.UNIONID U_UNIONID,
        u.OPENID U_OPENID,
        u.SEX U_SEX,
        u.LANG U_LANGUAGE,
        u.CITY U_CITY,
        u.PROVINCE U_PROVINCE,
        u.COUNTRY U_COUNTRY,
        u.NICKNAME U_NICKNAME,
        u.HEADIMGURL U_HEADIMGURL,
        u.SUBSCRIBE U_SUBSCRIBE

        from QUESTIONS q
        left join MEMBERUSER u
        on q.CREATORID=u.id
        left join VIEWS_COUNT_VIEW v
        on q.id=v.ques_id
        left join ANSWERS_COUNT_VIEW av
        on q.id=av.ques_id
        <where>
            1=1
            <if test="statusList!=null and statusList.size>0">
                and q.STATUS in
                <foreach collection="statusList" item="status" open="(" close=")" separator="">
                    #{status}
                </foreach>
            </if>
            <if test="type &gt; 0">
                and q.TYPE = #{type}
            </if>
            <if test="beginDate!=null">
                and q.CREATE_DATE &gt;= #{beginDate}
            </if>
            <if test="endDate!=null">
                and q.CREATE_DATE &lt; #{endDate}
            </if>
            <if test="updateBegin!=null">
                and q.UPDATE_DATE &gt;= #{updateBegin}
            </if>
            <if test="updateEnd!=null">
                and q.UPDATE_DATE &lt; #{updateEnd}
            </if>
            and q.STATUS != 9
            and q.id not in (select a.Q_ID from answers a)
        </where>
        order by q.CREATE_DATE DESC
    </select>


    <select id="getQuesSimple" resultType="Question" parameterType="int" useCache="true">
        select *
        from QUESTIONS q
        where q.ID=#{id}
    </select>

    <select id="getQuesDetail" resultMap="question" parameterType="int" useCache="true">
        select
        q.ID Q_ID,
        q.QTITLE Q_QTITLE,
        q.QCONTENT Q_QCONTENT,
        q.CREATE_DATE Q_CREATE_DATE,
        q.CREATORID Q_CREATOR_ID,
        q.UPDATE_DATE Q_UPDATE_DATE,
        q.POINTS Q_POINTS,
        q.TYPE Q_TYPE,
        q.STATUS Q_STATUS,
        q.VERSION Q_VERSION,
        v.COUNTS Q_VIEWS,

        a.ID A_ID,
        a.ACONTENT A_ACONTENT,
        a.CREATE_DATE A_CREATE_DATE,
        a.CREATORID A_CREATOR_ID,
        a.UPDATE_DATE A_UPDATE_DATE,
        a.BEST A_BEST,
        a.POINTS A_POINTS,
        a.TYPE A_TYPE,
        a.STATUS A_STATUS,
        a.VERSION A_VERSION,

        u.ID U_ID,
        u.USERNAME U_USERNAME,
        u.CREATE_DATE U_CREATE_DATE,
        u.UPDATE_DATE U_UPDATE_DATE,
        u.POINTS U_POINTS,
        u.PASSWD U_PASSWD,
        u.MOBILE U_MOBILE,
        u.ADDRESS U_ADDRESS,
        u.STATUS U_STATUS,
        u.VERSION U_VERSION,
        u.EMAIL U_EMAIL,
        u.UNIONID U_UNIONID,
        u.OPENID U_OPENID,
        u.SEX U_SEX,
        u.LANG U_LANGUAGE,
        u.CITY U_CITY,
        u.PROVINCE U_PROVINCE,
        u.COUNTRY U_COUNTRY,
        u.NICKNAME U_NICKNAME,
        u.HEADIMGURL U_HEADIMGURL,
        u.SUBSCRIBE U_SUBSCRIBE

        from QUESTIONS q left join ANSWERS a
        on q.ID=a.Q_ID
        left join MEMBERUSER u
        on q.CREATORID=u.id
        left join VIEWS_COUNT_VIEW v
        on q.id=v.ques_id
        where q.ID=#{id}
    </select>


    <insert id="saveQuestion" parameterType="Question" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        insert into QUESTIONS (QTITLE, QCONTENT, CREATE_DATE,UPDATE_DATE, CREATORID, TYPE, STATUS,NICKNAME,AGE,SEX) values(
        #{qtitle,javaType=String,jdbcType=VARCHAR},
        #{qcontent,javaType=String,jdbcType=VARCHAR},
        #{createDate,javaType=java.util.Date,jdbcType=TIMESTAMP},
        #{updateDate,javaType=java.util.Date,jdbcType=TIMESTAMP},
        #{creatorId,javaType=int,jdbcType=INTEGER},
        #{type,javaType=int,jdbcType=INTEGER},
        #{status,javaType=int,jdbcType=INTEGER},
        #{nickname,javaType=String,jdbcType=VARCHAR},
        #{age,javaType=int,jdbcType=INTEGER},
        #{sex,javaType=String,jdbcType=VARCHAR}
        )
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
            <!--            values IDENTITY_VAL_LOCAL()-->
        </selectKey>
    </insert>

    <!--    <delete id="delete" parameterType="City" flushCache="true">
        delete from APP.CITIES where city_id=#{cityId}
    </delete>-->

    <update id="updateQuestion" parameterType="Question">
        update QUESTIONS set
        UPDATE_DATE=#{updateDate},
        <if test="points &gt; 0 ">
            POINTS=#{points},
        </if>
        <if test="type!=null and type!=''">
            TYPE=#{type},
        </if>
        <if test="status!=null and status!=''">
            STATUS=#{status},
        </if>
        VERSION=#{version} + 1
        where id=#{id}
    </update>

</mapper>
